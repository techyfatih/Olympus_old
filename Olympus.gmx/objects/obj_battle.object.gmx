<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_battle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option = -1;
faster = false;
pDamage = 0;
mDamage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_battle, 0, 0, 0);
draw_set_color(c_white);
draw_roundrect(600, 200, 900, 260, false);
draw_set_color(c_black);
switch (option)
{
    case 0: //Attack
        if (faster)
        {
            draw_text(610, 210, "You dealt " + string(pDamage) + " damage!");
            draw_text(610, 230, obj_monster.name + " dealt " + string(mDamage) + " damage!");
        }
        else
        {
            draw_text(610, 215, obj_monster.name + " dealt " + string(mDamage) + " damage!");
            draw_text(610, 230, "You dealt " + string(pDamage) + " damage!");
        }
        break;
    case 1: //Abilities
        break;
    case 2: //Items
        break;
    case 3: //Allies
        break;
    case 4: //Run
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pATK, pDEF, pSPE, mHP, mATK, mDEF, mSPE, mTier;
pATK = obj_player.ATK;
pDEF = obj_player.DEF;
pSPE = obj_player.SPE;
mHP = obj_monster.currHP;
mATK = obj_monster.currATK;
mDEF = obj_monster.currDEF;
mSPE = obj_monster.currSPE;
mTier = obj_monster.tier;

if (pSPE &gt; mSPE) faster = true; //true = player, false = monster
else if (pSPE &lt; mSPE) faster = false
else
{
    if (random(1) &gt;= 0.5) faster = true;
    else faster = false;
}

option = obj_menu.curr;
switch (option)
{
    case 0: //Attack
        if (faster)
        {
            var miHP = mHP;
            mHP = scr_attack(pATK, mDEF, mTier, mHP);
            pDamage = miHP - mHP;
            if (mHP == 0) break;
            
            var piHP = pHP;
            pHP = scr_attack(mATK, pDEF, pTier, pHP);
            mDamage = piHP - pHP;
        }
        else
        {
            var piHP = pHP;
            pHP = scr_attack(mATK, pDEF, pTier, pHP);
            mDamage = piHP - pHP;
            if (pHP == 0) break;
            
            var miHP = mHP;
            mHP = scr_attack(pATK, mDEF, mTier, mHP);
            pDamage = miHP - mHP;
        }
        break;
    case 1: //Abilities
        break;
    case 2: //Items
        break;
    case 3: //Allies
        break;
    case 4: //Run
        if (faster) room_goto(rm_overworld);
        else
        {
            var n = random(1);
            if (n &lt; 0.5) room_goto(rm_overworld);
            else pHP = scr_attack(mATK, pDEF, pTier, pHP);
        }
        break;
}

obj_player.ATK = pATK;
obj_player.DEF = pDEF;
obj_player.SPE = pSPE;
obj_monster.currHP = mHP;
obj_monster.currATK = mATK;
obj_monster.currDEF = mDEF;
obj_monster.currSPE = mSPE;

if (pHP == 0)
{
    instance_create(0, 0, obj_lose);
    instance_destroy();
}
if (mHP == 0)
{
    turn++;
    if (pStats[0] &lt; (pTier + 1) * 10)
    {
        pHP += ceil(pStats[1] * 0.2);
        if (pHP &gt; pStats[1]) pHP = pStats[1];
        pHP++;
        for (var i = 0; i &lt; 5; i++) pStats[i]++;
    }
    room_goto(rm_overworld);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>480,480</point>
  </PhysicsShapePoints>
</object>
